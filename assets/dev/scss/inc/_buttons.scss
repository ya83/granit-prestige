@import "colors";
@import "mixins";

a {
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
    -webkit-tap-highlight-color: transparent;
    *outline: 0;
}

.btn {
    position: relative;
    background-color: transparent;
    border: none;
    border-radius: pxToRem(14px);
    @include font-btn;
    font-weight: bold;
    padding: pxToRem(14px) pxToRem(32px);
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
    -webkit-tap-highlight-color: transparent;
    *outline: 0;
    overflow: hidden;

    @media screen and (max-width: 991px) {}

    @media screen and (max-width: 531px) {
        border-radius: pxToRem(10px);
        padding: pxToRem(9px) pxToRem(25px);
    }

    &__bordered {
        border: pxToRem(2px) solid $grey-smog;

        @media screen and (min-width: 1200px) {
            position: relative;
            @include transition-default;

            &::before,
            &::after {
                position: absolute;
                left: 50%;
                content: '';
                background-color: rgb($grey-smog, 0%);
                border-radius: 50%;
                transform: translate(-50%, -50%);
                height: 0px;
                width: 0px;
                @include transition-default;
                transition-duration: .5s;
                z-index: -1;
            }

            &::before {
                top: 110%;
                transition-delay: .1s;
            }

            &::after {
                top: -10%;
            }

            &:hover {

                &::before,
                &::after {
                    height: 300px;
                    width: 300px;
                    transition-duration: 1s;
                }

                &::before {
                    background-color: rgb($grey-smog, 100%);
                }

                &::after {
                    background-color: rgb($grey-smog, 50%);
                }
            }
        }
    }

    &__bordered-white {
        border: pxToRem(2px) solid $white;

        @media screen and (min-width: 1200px) {
            position: relative;
            @include transition-default;
            z-index: 1;

            &::before,
            &::after {
                position: absolute;
                left: 50%;
                content: '';
                background-color: rgb($white, 0%);
                border-radius: 50%;
                transform: translate(-50%, -50%);
                height: 0px;
                width: 0px;
                @include transition-default;
                transition-duration: .5s;
                z-index: -1;
            }

            &::before {
                top: 110%;
                transition-delay: .1s;
            }

            &::after {
                top: -10%;
            }

            &:hover {
                color: $grey-default;

                &::before,
                &::after {
                    height: 300px;
                    width: 300px;
                    transition-duration: 1s;
                }

                &::before {
                    background-color: rgb($white, 100%);
                }

                &::after {
                    background-color: rgb($white, 50%);
                }
            }
        }
    }

    &__about-video {
        background-image: url("../images/btn-bg-about-video.png");
        background-color: rgb($grey-dark, 60%);
        background-position: center;
        background-size: 100%;
        background-repeat: no-repeat;
        background-blend-mode: multiply;
        padding: pxToRem(14px) pxToRem(32px);
        box-shadow: 0 pxToRem(14px) pxToRem(20px) rgb(black, 20%);
        z-index: 1;

        @media screen and (max-width: 991px) {}

        @media screen and (max-width: 539px) {
            padding: pxToRem(11px) pxToRem(22px);
        }

        &::before {
            position: absolute;
            top: 0;
            left: 0;
            content: '';
            background-image: url("../images/video-noise.gif");
            background-position: center;
            background-size: 100%;
            background-repeat: no-repeat;
            opacity: 0;
            z-index: -1;
            height: 100%;
            width: 100%;
        }

        >span {
            margin-left: pxToRem(40px);
            z-index: 1;

            @media screen and (max-width: 991px) {}

            @media screen and (max-width: 539px) {
                margin-left: pxToRem(32px);
            }
        }

        .icon-svg-play-rounded {
            position: absolute;
            top: 0;
            left: auto;
            fill: $white;
            @include icon-play-size;
        }

        @media screen and (min-width: 1200px) {
            @include transition-default;
            transition-property: background-size;

            &:hover {
                background-color: rgb($grey-dark, 0%);
                background-size: 110%;

                &::before {
                    opacity: 0.6;
                }
            }
        }
    }

    &__with-arrow {
        color: $grey-light;
        @include transition-default;
        padding: pxToRem(14px) 0;

        .arrow-wrapper {
            position: relative;
            display: inline-block;
            margin-left: pxToRem(6px);
            height: pxToRem(12px);
            width: pxToRem(34px);
            overflow: hidden;

            .icon-svg {
                position: absolute;
                top: 0;
                left: pxToRem(-68px);
                fill: $grey-light;
                display: inline-block;
                height: pxToRem(12px);
                width: pxToRem(34px);

                &:first-of-type {
                    left: 0;
                }
            }
        }

        @media screen and (min-width: 1200px) {
            &:hover {
                color: $white;

                .arrow-wrapper {
                    .icon-svg {
                        left: 0;
                        @include transition-default;

                        &:first-of-type {
                            left: pxToRem(68px);
                        }
                    }
                }
            }
        }
    }

    &__hamburger {
        background-color: $grey-smog;
        @include btn-hamburger-prop;

        >span {
            position: absolute;
            top: 50%;
            left: 50%;
            background-color: $white;
            transform: translate(-50%, -50%);
            height: pxToRem(2px);
            width: pxToRem(24px);

            @media screen and (max-width: 539px) {
                width: pxToRem(20px);
            }

            &::before,
            &::after {
                position: absolute;
                top: 0;
                left: 0;
                content: '';
                background-color: inherit;
                height: inherit;
                width: inherit;
            }

            &::before {
                transform: translateY(pxToRem(-7px));

                @media screen and (max-width: 539px) {
                    transform: translateY(pxToRem(-6px));
                }
            }

            &::after {
                transform: translateY(pxToRem(7px));

                @media screen and (max-width: 539px) {
                    transform: translateY(pxToRem(6px));
                }
            }
        }
    }

    &__close {
        background-color: $grey-default;
        @include btn-hamburger-prop;

        >span {
            position: absolute;
            top: 50%;
            left: 50%;
            background-color: transparent;
            transform: translate(-50%, -50%);
            height: pxToRem(2px);
            width: pxToRem(24px);

            @media screen and (max-width: 539px) {
                width: pxToRem(20px);
            }

            &::before,
            &::after {
                position: absolute;
                top: 0;
                left: 0;
                content: '';
                background-color: $white;
                height: inherit;
                width: inherit;
            }

            &::before {
                transform: rotate(-45deg);
            }

            &::after {
                transform: rotate(45deg);
            }
        }
    }
}